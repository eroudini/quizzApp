{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin Stagiaire\\\\Desktop\\\\Projet - Copie\\\\quizzApp\\\\quizzapp-front-end\\\\src\\\\pages\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [token, setToken] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const tokenFromUrl = urlParams.get(\"token\");\n    if (tokenFromUrl) {\n      setToken(tokenFromUrl);\n    } else {\n      setMessage(\"Invalid or missing token.\");\n    }\n  }, []);\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setMessage(\"Passwords do not match!\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:8080/auth/reset-password\", {\n        token,\n        newPassword\n      });\n      setMessage(response.data);\n      setTimeout(() => navigate(\"/login\"), 3000);\n    } catch (error) {\n      setMessage(\"Error resetting password.\");\n      console.error(\"Reset password error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleResetPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => navigate(\"/login\"),\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"hsIPMBSwQN47YlC/LcF1A77P8ok=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","token","setToken","navigate","urlParams","URLSearchParams","window","location","search","tokenFromUrl","get","handleResetPassword","e","preventDefault","response","post","data","setTimeout","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin Stagiaire/Desktop/Projet - Copie/quizzApp/quizzapp-front-end/src/pages/ResetPassword.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/login.css\";\r\n\r\nconst ResetPassword = () => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [token, setToken] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const tokenFromUrl = urlParams.get(\"token\");\r\n    if (tokenFromUrl) {\r\n      setToken(tokenFromUrl);\r\n    } else {\r\n      setMessage(\"Invalid or missing token.\");\r\n    }\r\n  }, []);\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setMessage(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/auth/reset-password\", {\r\n        token,\r\n        newPassword,\r\n      });\r\n\r\n      setMessage(response.data);\r\n      setTimeout(() => navigate(\"/login\"), 3000);\r\n    } catch (error) {\r\n      setMessage(\"Error resetting password.\");\r\n      console.error(\"Reset password error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Reset Password</h2>\r\n        {message && <p className=\"info-message\">{message}</p>}\r\n        <form onSubmit={handleResetPassword}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"login-button\">Submit</button>\r\n        </form>\r\n        <p>\r\n        <button className=\"back-button\" onClick={() => navigate(\"/login\")}>Back to Login</button>\r\n      </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}