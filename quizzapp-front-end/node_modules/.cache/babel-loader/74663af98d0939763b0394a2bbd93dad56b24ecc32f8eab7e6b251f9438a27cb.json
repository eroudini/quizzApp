{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin Stagiaire\\\\Desktop\\\\Projet - Copie\\\\quizzApp\\\\quizzapp-front-end\\\\src\\\\pages\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const navigate = useNavigate();\n  const [categories, setCategories] = useState([]); // État pour stocker les catégories\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false); // État pour gérer l'ouverture du menu déroulant\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // État pour vérifier l'authentification\n\n  // Vérifier si l'utilisateur est authentifié (par exemple, si un token est dans le localStorage)\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      // Vérification du token via un appel API pour confirmer que l'utilisateur est authentifié\n      const fetchUser = async () => {\n        try {\n          await axios.get(\"http://localhost:8080/auth/me\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          // Si l'appel est réussi, l'utilisateur est authentifié\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error(\"Token invalid or expired\", error);\n          localStorage.removeItem(\"token\");\n          setIsAuthenticated(false); // L'utilisateur n'est pas authentifié\n        }\n      };\n      fetchUser();\n    } else {\n      setIsAuthenticated(false); // Pas de token, utilisateur non authentifié\n    }\n\n    // Récupérer les catégories depuis la base de données\n    const fetchCategories = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/api/categories\"); // Remplacez par votre endpoint API\n        setCategories(response.data); // Mettre à jour l'état avec les catégories récupérées\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des catégories\", error);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  // Gérer le clic sur une catégorie\n  const handleCategoryClick = categoryId => {\n    navigate(`/categories/${categoryId}`); // Rediriger vers la page de la catégorie\n    setIsDropdownOpen(false); // Fermer le menu déroulant\n  };\n\n  // Gérer le clic sur le bouton de déconnexion\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\"); // Supprimer le token du localStorage\n    setIsAuthenticated(false); // Mettre à jour l'état pour indiquer que l'utilisateur n'est plus connecté\n    navigate(\"/login\"); // Rediriger vers la page de login\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: () => navigate(\"/\"),\n      style: {\n        cursor: \"pointer\"\n      },\n      children: \"Quizz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-links\",\n      children: [!isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/login\"),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/register\"),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsDropdownOpen(!isDropdownOpen),\n          children: \"Cat\\xE9gories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleCategoryClick(category.id),\n            className: \"dropdown-item\",\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"BX84Z/QpW+JMyiP1KP4XghMDq5Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","navigate","categories","setCategories","isDropdownOpen","setIsDropdownOpen","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","fetchUser","get","headers","Authorization","error","console","removeItem","fetchCategories","response","data","handleCategoryClick","categoryId","handleLogout","className","children","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","map","category","id","name","_c","$RefreshReg$"],"sources":["C:/Users/Admin Stagiaire/Desktop/Projet - Copie/quizzApp/quizzapp-front-end/src/pages/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Navbar = () => {\n  const navigate = useNavigate();\n  const [categories, setCategories] = useState([]); // État pour stocker les catégories\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false); // État pour gérer l'ouverture du menu déroulant\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // État pour vérifier l'authentification\n\n  // Vérifier si l'utilisateur est authentifié (par exemple, si un token est dans le localStorage)\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      // Vérification du token via un appel API pour confirmer que l'utilisateur est authentifié\n      const fetchUser = async () => {\n        try {\n          await axios.get(\"http://localhost:8080/auth/me\", {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          // Si l'appel est réussi, l'utilisateur est authentifié\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error(\"Token invalid or expired\", error);\n          localStorage.removeItem(\"token\");\n          setIsAuthenticated(false); // L'utilisateur n'est pas authentifié\n        }\n      };\n  \n      fetchUser();\n    } else {\n      setIsAuthenticated(false); // Pas de token, utilisateur non authentifié\n    }\n  \n    // Récupérer les catégories depuis la base de données\n    const fetchCategories = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/api/categories\"); // Remplacez par votre endpoint API\n        setCategories(response.data); // Mettre à jour l'état avec les catégories récupérées\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des catégories\", error);\n      }\n    };\n  \n    fetchCategories();\n  }, []);\n  \n\n  // Gérer le clic sur une catégorie\n  const handleCategoryClick = (categoryId) => {\n    navigate(`/categories/${categoryId}`); // Rediriger vers la page de la catégorie\n    setIsDropdownOpen(false); // Fermer le menu déroulant\n  };\n\n  // Gérer le clic sur le bouton de déconnexion\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\"); // Supprimer le token du localStorage\n    setIsAuthenticated(false); // Mettre à jour l'état pour indiquer que l'utilisateur n'est plus connecté\n    navigate(\"/login\"); // Rediriger vers la page de login\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <h1 onClick={() => navigate(\"/\")} style={{ cursor: \"pointer\" }}>\n        Quizz App\n      </h1>\n      <div className=\"nav-links\">\n        {!isAuthenticated ? (\n          <>\n            <button onClick={() => navigate(\"/login\")}>Login</button>\n            <button onClick={() => navigate(\"/register\")}>Register</button>\n          </>\n        ) : (\n          <button onClick={handleLogout}>Logout</button>\n        )}\n        <div className=\"dropdown\">\n          <button onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\n            Catégories\n          </button>\n          {isDropdownOpen && (\n            <div className=\"dropdown-content\">\n              {categories.map((category) => (\n                <div\n                  key={category.id}\n                  onClick={() => handleCategoryClick(category.id)}\n                  className=\"dropdown-item\"\n                >\n                  {category.name}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}