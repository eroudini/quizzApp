{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin Stagiaire\\\\Desktop\\\\Projet\\\\quizzApp\\\\quizzapp-front-end\\\\quizapp\\\\src\\\\pages\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/quiz.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const {\n    quizId\n  } = useParams();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`http://localhost:8080/api/questions?quizId=${quizId}`).then(response => setQuestions(response.data)).catch(error => console.error(\"Error fetching questions:\", error));\n  }, [quizId]);\n  useEffect(() => {\n    const interval = setInterval(() => setTimer(prev => prev + 1), 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleAnswerClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    if (currentQuestionIndex + 1 < questions.length) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      submitScore();\n    }\n  };\n  const submitScore = () => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      axios.post(\"http://localhost:8080/api/submit-score\", {\n        quizId,\n        score,\n        time: timer\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(() => navigate(\"/categories\"));\n    } else {\n      navigate(\"/categories\");\n    }\n  };\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 38\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time: \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: questions[currentQuestionIndex].text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: questions[currentQuestionIndex].answers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerClick(answer.correct),\n        children: answer.text\n      }, answer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"ej0d9gt4lsxM2qSAsUjkWYnfYeI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","Quiz","_s","quizId","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","timer","setTimer","navigate","get","then","response","data","catch","error","console","interval","setInterval","prev","clearInterval","handleAnswerClick","isCorrect","length","submitScore","token","localStorage","getItem","post","time","headers","Authorization","children","fileName","_jsxFileName","lineNumber","columnNumber","className","text","answers","map","answer","onClick","correct","id","_c","$RefreshReg$"],"sources":["C:/Users/Admin Stagiaire/Desktop/Projet/quizzApp/quizzapp-front-end/quizapp/src/pages/Quiz.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/quiz.css\";\r\n\r\nconst Quiz = () => {\r\n  const { quizId } = useParams();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [timer, setTimer] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8080/api/questions?quizId=${quizId}`)\r\n      .then((response) => setQuestions(response.data))\r\n      .catch((error) => console.error(\"Error fetching questions:\", error));\r\n  }, [quizId]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => setTimer((prev) => prev + 1), 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleAnswerClick = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    if (currentQuestionIndex + 1 < questions.length) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      submitScore();\r\n    }\r\n  };\r\n\r\n  const submitScore = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      axios.post(\"http://localhost:8080/api/submit-score\", { quizId, score, time: timer }, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      }).then(() => navigate(\"/categories\"));\r\n    } else {\r\n      navigate(\"/categories\");\r\n    }\r\n  };\r\n\r\n  if (questions.length === 0) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Quiz</h2>\r\n      <p>Time: {timer}s</p>\r\n      <h3>{questions[currentQuestionIndex].text}</h3>\r\n      <div className=\"button-container\">\r\n        {questions[currentQuestionIndex].answers.map((answer) => (\r\n          <button key={answer.id} onClick={() => handleAnswerClick(answer.correct)}>\r\n            {answer.text}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}